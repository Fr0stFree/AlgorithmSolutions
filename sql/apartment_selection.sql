# В таблице ниже содержится список квартир агентства недвижимости. Каждый раз, когда клиент просит подобрать варианты,
# ему предлагаются три самые подходящие позиции. Если по заданным критериям получается больше трёх вариантов, например
# несколько квартир с одинаковой ценой, то эти дополнительные позиции также попадают в итоговую выборку. И получается,
# что вместо трёх позиций клиенту отправляется больше. Напишите SQL-запрос, который вернет список подходящих квартир.
# Клиента интересуют все варианты более 1 комнаты, чем дешевле, тем лучше. В итоговой таблице выведите улицу, дом, цену
# и количество комнат. Финальную таблицу отсортируйте по комнатам в обратном порядке и цене в прямом.

-- init
DROP TABLE IF EXISTS flats;
CREATE TABLE flats (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    street VARCHAR(50) NULL,
    house VARCHAR(10) NULL,
    price INTEGER NULL,
    rooms INTEGER NULL
);
INSERT INTO flats (id, street, house, price, rooms)
VALUES
    (1, 'Ефремова', '2', 35000, 3),
    (2, 'Горького', '17', 25000, 2),
    (3, 'Горького', '207', 22000, 2),
    (4, 'Чайковского', '36', 30000, 3),
    (5, 'Гагарина', '7', 32000, 3),
    (6, 'Колоскова', '8', 18000, 1),
    (7, 'Мукомольная', '2', 22000, 2),
    (8, 'Озерная', '35', 20000, 1),
    (9, 'Озерова', '7', 24000, 2),
    (10, 'Земельная', '14', 25000, 2),
    (11, 'Горького', '202', 24000, 3),
    (12, 'Советский', '71', 18000, 1),
    (13, 'Банковская', '6', 35000, 3),
    (14, 'Красносельская', '31', 40000, 3),
    (15, 'Суворова', '40', 25000, 2);

-- solution
SELECT
    street,
    house,
    price,
    rooms
FROM
    (SELECT
        street,
        house,
        price,
        rooms,
        RANK() OVER(ORDER BY price) AS rating
    FROM flats
    WHERE rooms > 1) AS temp
WHERE rating <= 3
ORDER BY rooms DESC, price